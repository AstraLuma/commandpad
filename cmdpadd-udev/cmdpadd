#!/usr/bin/python

import uinput, udev, sys
from devfilter import DevFilter, main
from commandpad import findpads

MAPPING = {
	uinput.BTN_A: uinput.KEY_F13,
	uinput.BTN_B: uinput.KEY_F14,
	uinput.BTN_C: uinput.KEY_F15,
	uinput.BTN_X: uinput.KEY_F16,
	uinput.BTN_Y: uinput.KEY_F17,
	uinput.BTN_Z: uinput.KEY_F18,
	uinput.BTN_TL: uinput.KEY_F19,
	uinput.BTN_TR: uinput.KEY_F20,
	uinput.BTN_TL2: uinput.KEY_F21,
	uinput.BTN_TR2: uinput.KEY_F22,
	uinput.BTN_SELECT: uinput.KEY_LINEFEED,
}

def finddev():
	rv = udev.FindUinput()
	if rv is None:
		raise ValueError, "Can't find device"
	return rv

# Initialize
@DevFilter("Saitek Magic Bus", 0x06A3, 0x8000, 0x0111,
	KEY=MAPPING.itervalues())
def KeyFilter():
		event = yield
		while True:
			if event.code in MAPPING:
				print "%s->%s" % (event.code, MAPPING[event.code])
				event.code = MAPPING[event.code]
				# Send an event
				event = yield event

findpads.init()
main(KeyFilter, finddev())

