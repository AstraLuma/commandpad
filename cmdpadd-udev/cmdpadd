#!/usr/bin/python

import uinput, udev, sys
from devfilter import DevFilter, main
from commandpad import findpads

MAPPING = {
	uinput.BTN_A: uinput.KEY_1,
	uinput.BTN_B: uinput.KEY_2,
	uinput.BTN_C: uinput.KEY_3,
	uinput.BTN_X: uinput.KEY_4,
	uinput.BTN_Y: uinput.KEY_5,
	uinput.BTN_Z: uinput.KEY_6,
	uinput.BTN_TL: uinput.KEY_7,
	uinput.BTN_TR: uinput.KEY_8,
	uinput.BTN_TL2: uinput.KEY_9,
	uinput.BTN_TR2: uinput.KEY_LEFTCTRL,
	uinput.BTN_SELECT: uinput.KEY_LEFTSHIFT,
}

def finddev():
	rv = udev.FindUinput()
	if rv is None:
		raise ValueError, "Can't find device"
	return rv

# Initialize
@DevFilter("Saitek Magic Bus", 0x06A3, 0x8000, 0x0111,
	KEY=MAPPING.iterkeys())
def KeyFilter():
		event = yield
		while event is not None:
			nev = None
			if event.type == uinput.EV_KEY and event.code in MAPPING:
				print "%s->%s" % (event.code, MAPPING[event.code])
				event.code = MAPPING[event.code]
				nev = event
			# Send an event
			event = yield nev

findpads.init()
main(KeyFilter, findpads.getEventFiles().next(), finddev())

